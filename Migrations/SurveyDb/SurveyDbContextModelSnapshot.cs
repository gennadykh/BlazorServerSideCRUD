// <auto-generated />
using System;
using BlazorServerSideCRUD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorServerSideCRUD.Migrations.SurveyDb
{
    [DbContext(typeof(SurveyDbContext))]
    partial class SurveyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleSurvey.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Options = "TX:15521 Import CAESAR,TX:4877 Support Jacketed Piping,TX:9146-Main Thickness Table",
                            QuestionType = "MultiLineTextBox",
                            Text = "CADWorx Plant: Rank the following items with the highest priority for you and your market first."
                        },
                        new
                        {
                            ID = 2,
                            Options = "TX:20983-Support Circular,TX:5002-Steel BOM TOTAL",
                            QuestionType = "MultiLineTextBox",
                            Text = "CADWorx Structure: Rank the following items with the highest priority for you and your market first."
                        });
                });

            modelBuilder.Entity("SimpleSurvey.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "DBO"
                        },
                        new
                        {
                            ID = 2,
                            Name = "SA"
                        },
                        new
                        {
                            ID = 3,
                            Name = "PUBLIC"
                        });
                });

            modelBuilder.Entity("SimpleSurvey.Survey", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    //? b.Property<int?>("UserID")
                        //? .HasColumnType("int");

                    b.HasKey("ID");

                    //? b.HasIndex("UserID");

                    b.ToTable("Survey");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = 2,
                            CreatedOn = new DateTime(2020, 10, 1, 9, 47, 35, 996, DateTimeKind.Local).AddTicks(6618),
                            Description = "my description",
                            ExpiresOn = new DateTime(2021, 10, 1, 9, 47, 36, 2, DateTimeKind.Local).AddTicks(9513),
                            Publish = true,
                            Title = "Title 1"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = 2,
                            CreatedOn = new DateTime(2020, 10, 1, 9, 47, 36, 3, DateTimeKind.Local).AddTicks(1222),
                            Description = "my description",
                            ExpiresOn = new DateTime(2021, 10, 1, 9, 47, 36, 3, DateTimeKind.Local).AddTicks(1241),
                            Publish = true,
                            Title = "Feed back from"
                        });
                });

            modelBuilder.Entity("SimpleSurvey.SurveyResponse", b =>
                {
                    b.Property<int>("SurveyID")
                        .HasColumnType("int");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("FilledBy")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    //? b.Property<int?>("UserID")
                        //? .HasColumnType("int");

                    b.HasKey("SurveyID", "QuestionID");

                    b.HasIndex("QuestionID");

                    //? b.HasIndex("UserID");

                    b.ToTable("SurveyResponse");
                });

            modelBuilder.Entity("SimpleSurvey.Survey_Questions", b =>
                {
                    b.Property<int>("SurveyID")
                        .HasColumnType("int");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("SurveyID", "QuestionID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Survey_Questions");
                });

            modelBuilder.Entity("SimpleSurvey.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Role1ID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.HasIndex("Role1ID");

                    b.ToTable("SurveyUser");

                    b.HasData(
                        new
                        {
                            ID = 2,
                            FirstName = "Gennady",
                            LastName = "Khokhorin",
                            Password = "12345",
                            Role = 1,
                            UserName = "GOK"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "Gopi",
                            LastName = "Kandru",
                            Password = "12345",
                            Role = 4,
                            UserName = "Gk"
                        },
                        new
                        {
                            ID = 4,
                            FirstName = "Garrett",
                            LastName = "Walker",
                            Password = "12345",
                            Role = 4,
                            UserName = "Gw"
                        });
                });

            modelBuilder.Entity("SimpleSurvey.Survey", b =>
                {
                    b.HasOne("SimpleSurvey.User", "User")
                        .WithMany("Surveys");
                        //? .HasForeignKey("UserID");
                });

            modelBuilder.Entity("SimpleSurvey.SurveyResponse", b =>
                {
                    b.HasOne("SimpleSurvey.Question", "Question")
                        .WithMany("SurveyResponses")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleSurvey.Survey", "Survey")
                        .WithMany("SurveyResponses")
                        .HasForeignKey("SurveyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleSurvey.User", "User")
                        .WithMany("SurveyResponses");
                        //? .HasForeignKey("UserID");
                });

            modelBuilder.Entity("SimpleSurvey.Survey_Questions", b =>
                {
                    b.HasOne("SimpleSurvey.Question", "Question")
                        .WithMany("Survey_Questions")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleSurvey.Survey", "Survey")
                        .WithMany("Survey_Questions")
                        .HasForeignKey("SurveyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleSurvey.User", b =>
                {
                    b.HasOne("SimpleSurvey.Role", "Role1")
                        .WithMany("Users")
                        .HasForeignKey("Role1ID");
                });
#pragma warning restore 612, 618
        }
    }
}
