@page "/GenerateSurvey"
@using BlazorServerSideCRUD.Data
@using BlazorServerSideCRUD.Models
@inject SurveyService surveyService


<h3>Available Surveys</h3>
@if (serveys == null) {
  <p><em>Loading...</em></p>
} else {
  <table class='table table-hover'>
    <thead>
      <tr>
        <th>ID</th>
        <th>Title</th>
        <th>Description</th>
        <th>Created on</th>
        <th>Expires on</th>
        <th>Created By</th>
        <th>Publish</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var item in serveys)
      {
        <tr>
          <td>@item.ID</td>
          <td>@item.Title</td>
          <td>@item.Description</td>
          <td>@item.CreatedOn</td>
          <td>@item.ExpiresOn</td>
          <td>@GetUserFirstName(@item.CreatedBy) @GetUserLastName(@item.CreatedBy)</td>
          @*<td>@item.CreatedBy</td>*@
          <td>@item.Publish</td>
        </tr>
        }
    </tbody>
  </table>
}


@functions {
  List<SimpleSurvey.Survey> serveys;
  List<SimpleSurvey.User> users;

//? gok protected override async Task OnInitAsync() {
    protected override async Task OnInitializedAsync() {
    await load();
  }

  protected async Task load() {
    serveys = await surveyService.GetSurveysAsync();
    users = await surveyService.GetUsersAsync();
  }
  protected string GetUserFirstName(int id){
        return users.Find(c => c.ID == id).FirstName;
  }
  protected string GetUserLastName(int id){
        return users.Find(c => c.ID == id).LastName;
  }
}